"use strict";Object.defineProperty(exports,"__esModule",{value:true});const valuePattern=/---!{.*?(}!---)/gi;const eventPattern=/^\(.*\)$/gi;const propPattern=/^\[.*\]$/;const sanitizePattern=/^this\./;const startSeparator=/---!\{/gi;const endSeparator=/\}!---/gi;class ContentNode{constructor(e,t){this.node=e;this.compiler=t;this.base=e.nodeValue||"";this.indicies=this.base.match(valuePattern).map(e=>+e.replace(startSeparator,"").replace(endSeparator,""));this.indicies.forEach(e=>this.compiler.partIndicies.set(e,this))}set value(e){const t=this.base.replace(valuePattern,e);this.value!==t?this.node.nodeValue=t:null}get value(){return this.node.nodeValue}setValue(e=[]){this.node.nodeValue=this.base.replace(/---!{*.}!---/g,t=>e[+t.replace(startSeparator,"").replace(endSeparator,"")])}update(e){this.node.nodeValue=this.base.replace(/---!{*.}!---/g,t=>{const s=e[+t.replace(startSeparator,"").replace(endSeparator,"")];return s===null?"":s})}}class AttributeNode{constructor(e,t,s,n,a){this.node=e;this.boundAttrs=t;this.boundEvents=s;this.context=n;this.compiler=a;this.boundAttrs.forEach(e=>{e.base=e.value;this.indicies=e.base.match(valuePattern).map(e=>+e.replace(startSeparator,"").replace(endSeparator,""));this.indicies.forEach(e=>this.compiler.partIndicies.set(e,this))});this.addListeners()}addListeners(){this.boundEvents.forEach((e,t)=>{const s=e.split(/;/);const n=s.filter(e=>e.match(sanitizePattern));const a=n.join("; ");if(e.match(sanitizePattern)){const e=new Function(a).bind(this.context);this.node.addEventListener(t,e);this.node._boundEvents=e}if(n.length<s.length){console.warn("Inline functions not allowed inside of event bindings. Unsafe functions have been removed from node",this.node)}})}updateProperty(e,t){const s=e.name.replace(/\[|\]/g,"");this.node[s]=t;if(t&&t!=="false"){this.node.setAttribute(s,t)}else{this.node.removeAttribute(s)}}update(e){this.boundAttrs.forEach(t=>{const s=t.base.match(/---!{*.}!---/g)||[];const n=s.map(e=>+e.replace("---!{","").replace("}!---",""));let a=t.base;if(n.length===1){a=a.replace(`---!{${n[0]}}!---`,e[n[0]])}else if(n.length>1){for(let t=0;t<n.length;t+=1){const s=e[n[t]]||"";a=a.replace(`---!{${n[t]}}!---`,s)}}t.value=a;if(t.name.match(propPattern)){if(n.length===1){a=e[n[0]]}this.updateProperty(t,a)}})}}class Template{constructor(e,t,s,n){this.strings=e;this.values=t;this.oldValues=t.map((e,t)=>`---!{${t}}!---`);this.location=s;this.context=n;this.parts=[];this.partIndicies=new Map;this.eventHandlers=[];this._init()}_append(e){for(let e=0;e<this.parts.length;e+=1){const t=this.parts[e];if(t instanceof ContentNode){t.setValue(this.values,this.oldValues[e])}else if(t instanceof AttributeNode){t.update(this.values,this.oldValues)}}this.location.appendChild(e)}_init(){const e=this.strings.map((e,t)=>`${e?e:""}${this.values[t]!==undefined?"---!{"+t+"}!---":""}`).join("");const t=document.createElement("template");t.innerHTML=e;const s=document.importNode(t.content,true);const n=document.createTreeWalker(s,133,null,false);this._walk(n,this.parts,true);this._append(s)}_walk(e,t,s){while(e.nextNode()){const{currentNode:n}=e;if(!n.__templiteralCompiler){switch(n.nodeType){case 1:{const{attributes:e}=n;if(e.length){const a=new Map;const i=new Map;for(let t=0;t<e.length;t+=1){const o=e[t];if(o.value.match(valuePattern)||o.name.match(propPattern)){a.set(o.name,o)}if(s&&o.name.match(eventPattern)){const e=o.name.substring(1,o.name.length-1);i.set(e,o.value);this.eventHandlers.push({eventName:e,currentNode:n})}}if(a.size>=1||i.size>=1){const e=new AttributeNode(n,a,i,this.context,this);t.push(e)}}break}case 3:{if(n.textContent&&n.textContent.match(valuePattern)){const e=new ContentNode(n,this);t.push(e)}break}}}else{this.templiteralParts.add(n)}}}update(e){this.oldValues=this.values;this.values=e;for(let t=0;t<e.length;t+=1){if(e[t]!==this.oldValues[t]){this.partIndicies.get(t).update(e)}}}}const templateCache=new Map;function templiteral(e=this,t=this){e.shadowRoot?e=e.shadowRoot:null;return(s,...n)=>{const a=s.join("");let i=templateCache.get(a);if(i){i.update(n)}else{i=new Template(s,n,e,t);templateCache.set(a,i)}return i}}exports.templiteral=templiteral;