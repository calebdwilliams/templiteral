"use strict";Object.defineProperty(exports,"__esModule",{value:true});const valuePattern=/---!\{.*\}!---/gi;const eventPattern=/^\(.*\)$/gi;const propPattern=/^\[.*\]$/;const sanitizePattern=/^this\./;const startSeparator=/---!\{/gi;const endSeparator=/\}!---/gi;class ContentNode{constructor(e){this.node=e;this.base=e.nodeValue||"";this.index=+this.base.match(valuePattern)[0].replace(startSeparator,"").replace(endSeparator,"")}set value(e){const t=this.base.replace(valuePattern,e);this.value!==t?this.node.nodeValue=t:null}get value(){return this.node.nodeValue}setValue(e=""){this.node.nodeValue=this.base.replace(valuePattern,e)}update(e){this.value=e[this.index]}}class AttributeNode{constructor(e,t,s,n,a){this.node=e;this.boundAttrs=t;this.boundEvents=s;this.context=n;this.index=a;this.boundAttrs.forEach(e=>e.base=e.value);this.addListeners()}addListeners(){this.boundEvents.forEach((e,t)=>{const s=e.split(/;/);const n=s.filter(e=>e.match(sanitizePattern));const a=n.join("; ");if(e.match(sanitizePattern)){const e=new Function(a).bind(this.context);this.node.addEventListener(t,e);this.node._boundEvents=e}if(n.length<s.length){console.warn("Inline functions not allowed inside of event bindings. Unsafe functions have been removed from node",this.node)}})}cleanUp(){this.boundAttrs.forEach(e=>e.value=e.value.replace(startSeparator,"").replace(endSeparator,""))}updateAttributes(e,t){const s=e.slice(1,-1);if(t.value){this.node[s]=t.value;this.node.setAttribute(s,t.value)}else{this.node.removeAttribute(s)}}updateProperty(e,t){const s=e.name.replace(/\[|\]/g,"");this.node[s]=t;if(t&&t!=="false"){this.node.setAttribute(s,t)}else{this.node.removeAttribute(s)}}update(e){this.boundAttrs.forEach(t=>{const s=t.base.match(/---!{*.}!---/g)||[];const n=s.map(e=>+e.replace("---!{","").replace("}!---",""));let a=t.base;for(let t=0;t<n.length;t+=1){const s=e[n[t]];a=a.replace(`---!{${n[t]}}!---`,s)}t.value=a;if(t.name.match(propPattern)){this.updateProperty(t,a)}})}}class Template{constructor(e,t,s,n){this.strings=e;this.values=t;this.oldValues=t.map((e,t)=>`---!{${t}}!---`);this.location=s;this.context=n;this.parts=[];this.templiteralParts=new Set;this.eventHandlers=[];this._init()}_append(e){this.parts.forEach((e,t)=>{if(e instanceof ContentNode){e.setValue(this.values[t],this.oldValues[t])}else if(e instanceof AttributeNode){e.update(this.values,this.oldValues)}});this.location.appendChild(e)}_init(){const e=this.strings.map((e,t)=>`${e?e:""}${this.values[t]!==undefined?"---!{"+t+"}!---":""}`).join("");const t=document.createElement("template");t.innerHTML=e;const s=document.importNode(t.content,true);const n=document.createTreeWalker(s,133,null,false);this._walk(n,this.parts,true);this._append(s)}_walk(e,t,s){let n=-1;while(e.nextNode()){const{currentNode:a}=e;if(!a.__templiteralCompiler){switch(a.nodeType){case 1:{const{attributes:e}=a;if(e.length){const i=new Map;const o=new Map;for(let t=0;t<e.length;t+=1){const n=e[t];if(n.value.match(valuePattern)||n.name.match(propPattern)){i.set(n.name,n)}if(s&&n.name.match(eventPattern)){const e=n.name.substring(1,n.name.length-1);o.set(e,n.value);this.eventHandlers.push({eventName:e,currentNode:a})}}if(i.size>=1||o.size>=1){n+=1;const e=new AttributeNode(a,i,o,this.context,n);t.push(e)}}break}case 3:{n+=1;if(a.textContent&&a.textContent.match(valuePattern)){n+=1;const e=new ContentNode(a,n);t.push(e)}break}}}else{this.templiteralParts.add(a)}}return t}update(e){this.oldValues=this.values;this.values=e;this.parts.forEach(t=>{t.update(e,this.oldValues)})}}const templateCache=new Map;function templiteral(e=this,t=this){e.shadowRoot?e=e.shadowRoot:null;return(s,...n)=>{const a=btoa(s.join(""));let i=templateCache.get(a);if(i){i.update(n)}else{i=new Template(s,n,e,t);templateCache.set(a,i)}}}function registerElements(e){e.forEach(e=>customElements.define(e.tagName,e))}exports.templiteral=templiteral;exports.registerElements=registerElements;