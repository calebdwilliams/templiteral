const valuePattern=/---!{.*?(}!---)/gi;const propPattern=/^\[.*\]$/;const matchPattern=/---!{\d+}!---/gi;const removeSymbol=Symbol("RemoveTemplate");const rendererSymbol=Symbol("Renderer");const repeaterSymbol=Symbol("Repeater");const valueToInt=e=>+e.replace(/(---!{)|(}!---)/gi,"");const toEventName=e=>e.replace(/(\()|(\))/gi,"");class ContentNode{constructor(e,t){this.node=e;this.compiler=t;this.base=e.nodeValue||"";this.indicies=this.base.match(valuePattern).map(valueToInt);this.indicies.forEach(e=>this.compiler.partIndicies.set(e,this))}update(e){this.node.nodeValue=this.base.replace(matchPattern,t=>{const s=e[valueToInt(t)];return s===null?"":e[valueToInt(t)]})}}class AttributeNode{constructor(e,t,s,i,n){this.node=e;this.boundAttrs=t;this.boundEvents=s;this.context=i;this.compiler=n;this.boundAttrs.forEach(e=>{e.base=e.value;e.bases=e.base.match(matchPattern)||[];e.baseIndicies=e.bases.map(valueToInt);e.cleanName=e.name.replace(/\[|\]/g,"");const t=e.base.match(valuePattern)||[];this.indicies=t.map(valueToInt);this.indicies.forEach(e=>this.compiler.partIndicies.set(e,this))});this.eventMap=new Map}addListener(e,t){if(!this.eventMap.get(e)){this.node.addEventListener(e,t.bind(this.context));this.eventMap.set(e,t);!this.context.DEBUG?this.node.removeAttribute(`(${e})`):null}}disconnect(){if(this.eventMap.size){this.eventMap.forEach((e,t,s)=>{this.node.removeEventListener(t,e);s.delete(t)})}}updateProperty(e,t){const s=e.cleanName;!this.context.DEBUG?this.node.removeAttribute(e.name):null;this.node[s]=t;if(t&&(t!=="false"&&t!=="undefined")){this.node.setAttribute(s,t)}else{this.node.removeAttribute(s)}}update(e){this.boundAttrs.forEach(t=>{let s=t.base;for(let i=0;i<t.baseIndicies.length;i+=1){const n=t.baseIndicies[i];const r=e[n]||"";if(typeof r!=="function"){s=s.replace(`---!{${n}}!---`,r)}else{this.addListener(toEventName(t.name),r);this.boundAttrs.delete(t.name)}}t.value=s;if(t.name.match(propPattern)){if(t.baseIndicies.length===1){s=e[t.baseIndicies[0]]}this.updateProperty(t,s)}})}}const deepEqual=(e,t)=>{if(e===t)return true;if(e&&t&&typeof e=="object"&&typeof t=="object"){const s=Array.isArray(e);const i=Array.isArray(t);let n;let r;let o;if(s&&i){r=e.length;if(r!=t.length)return false;for(n=r;n--!==0;)if(!deepEqual(e[n],t[n]))return false;return true}if(s!=i)return false;const a=e instanceof Date;const l=t instanceof Date;if(a!=l)return false;if(a&&l)return e.getTime()==t.getTime();const h=e instanceof RegExp;const c=t instanceof RegExp;if(h!=c)return false;if(h&&c)return e.toString()==t.toString();const u=Object.keys(e);r=u.length;if(r!==Object.keys(t).length)return false;for(n=r;n--!==0;)if(!Object.hasOwnProperty.call(t,u[n]))return false;for(n=r;n--!==0;){o=u[n];if(!deepEqual(e[o],t[o]))return false}return true}else if(e&&t&&typeof e=="function"&&typeof t=="function"){return true}return e!==e&&t!==t};class DirectiveNode{constructor(e,t,s,i,n){this.node=e;this.values=t;this.context=s;this.compiler=i;this.index=n;this.templateMap=null;this.compiler.partIndicies.set(n,this);this.node[repeaterSymbol]=[];this.repeater=this.node[repeaterSymbol];this.group=Symbol("Group")}init(){this.templates=this.values.map((e,t)=>{const[s,i]=e;const{$$key:n}=i;if(this.templateMap===null){if(typeof n!=="string"&&typeof n!=="number"){this.templateMap=new WeakMap}else{this.templateMap=new Map}}let r;if(this.templateMap.has(n)){r=this.templateMap.get(n);r.update(i)}else{r=new Template(s,i,this.node,this.context,this.group,t);this.templateMap.set(n,r)}this.node[this.group].set(t,r);this.repeater.push(...r.nodes);return r})}update(e){const t=e[this.index];const s=this.values;this.values=t;const i=new Set(this.values.map(([,e])=>e.$$key));const n=new Set(s.map(([,e])=>e.$$key));const r=new Set;i.forEach(e=>{n.has(e)?null:r.add(e)});n.forEach(e=>{const t=this.templateMap.get(e);if(t&&!i.has(e)){t[removeSymbol]();this.templateMap.delete(e)}});this.init()}}class Template{constructor(e,t,s,i,n=null,r=null){this.strings=e;this.values=t;this.oldValues=t.map((e,t)=>`---!{${t}}!---`);this.location=s;this.context=i;this.group=n;this.index=r;this.context.refs=this.context.refs||{};this.parts=[];this.partIndicies=new Map;this.context.$el=s;this.templateSymbol=Symbol("Template");this.nodes=[];this._init()}_append(e){this.nodes=Array.from(e.children).map(e=>{e[this.templateSymbol]=this;return e});if(this.location instanceof Comment){if(this.group){this.location[this.group]=this.location[this.group]||new Map;let t=this.location[this.group];this.location[this.group].set(this.index,this);if(this.index===0){this.location.after(e)}else{let s=this.index-1;while(!t.get(s)){s-=1}t.get(s).nodes[t.get(this.index-1).nodes.length-1].after(e)}}}else{this.location.appendChild(e)}if(!this.context[rendererSymbol]){Object.defineProperty(this,rendererSymbol,{value:this,enumerable:false,configurable:false,writable:false})}}_createBase(){return this.strings.map((e,t)=>{const s=this.values[t];const i=`---!{${t}}!---`;let n="";n+=e?e:"";if(s!==undefined&&!Array.isArray(s)){n+=i}else if(s!==undefined&&Array.isArray(s)){n+=`\x3c!-- ${i} --\x3e`}return n}).join("")}_createNode(e){const t=document.createElement("template");t.innerHTML=e;return document.importNode(t.content,true)}_init(){const e=this._createBase();const t=this._createNode(e);const s=document.createTreeWalker(t,133,null,false);this._walk(s,this.parts,true);this._append(t)}_walk(e,t){while(e.nextNode()){const{currentNode:s}=e;switch(s.nodeType){case 1:{const{attributes:e}=s;if(e.length){const i=new Map;const n=new Map;for(let t=0;t<e.length;t+=1){const n=e[t];if(n.value.match(valuePattern)||n.name.match(propPattern)){i.set(n.name,n)}else if(n.name.match("ref")){this.context.refs[n.value]=s}}if(i.size>=1||n.size>=1){const e=new AttributeNode(s,i,n,this.context,this);t.push(e);e.update(this.values,this.oldValues)}}break}case 3:{if(s.textContent&&s.textContent.match(valuePattern)){const e=new ContentNode(s,this);t.push(e);e.update(this.values,this.oldValues)}break}case 8:{const e=valueToInt(s.nodeValue);const i=this.values[e];const n=this.values[e];const r=new DirectiveNode(s,n,this.context,this,e,i);t.push(r);r.init(this.values[t.length-1]);break}}}}update(e){this.oldValues=this.values;this.values=e;for(let t=0;t<e.length;t+=1){const s=this.partIndicies.get(t);s&&!deepEqual(e[t],this.oldValues[t])&&s.update(e)}}[removeSymbol](){this.nodes.forEach(e=>e.parentNode.removeChild(e));this.nodes=null;this.parts.filter(e=>e instanceof AttributeNode).forEach(e=>e.disconnect());this.parts=null;this.partIndicies=null;this.context=null;this.location=null;this.group=null}}class StyleSheetRegistry{constructor(){this.adopters=new WeakMap;this.registry=new Map;this.observer=new MutationObserver(e=>{e.forEach(e=>{[...e.removedNodes].forEach(e=>{if(this.adopters.has(e)){this.adopters.delete(e)}else if(this.adopters.has(e.shadowRoot)){this.adopters.delete(e.shadowRoot)}})})});this.observer.observe(document.body,{childList:true});this._error=Symbol("error");this._pending=Symbol("pending");this.pending=new Set}adopt(e,t){const s=this.adopters.get(e)||new Map;if(!s.size){this.adopters.set(e,s)}if(!s.has(t)&&this.get(t)!==this._pending){const i=this.get(t);e.appendChild(i);s.set(t,i);return Promise.resolve(i)}else if(this.get(t)===this._pending){return new Promise((i,n)=>{const r=window.setInterval(()=>{if(this.get(t)){const o=this.get(t);if(o!==this._error&&o!==this._pending){e.appendChild(o);s.set(t,o);i(o);window.clearInterval(r)}else if(o===this._error){n();window.clearInterval(r)}}},200)})}else{return Promise.resolve(s.get(t))}}createSheet(e){const t=document.createElement("style");t.textContent=e;return t}define(e,t){this.registry.set(e,t);return Promise.resolve({name:e})}get(e){if(this.registry.get(e)){const t=this.registry.get(e);if(t===this._pending||t===this._error){return t}return this.createSheet(t)}else{throw new Error(``)}}load(e,t,s){this.registry.set(e,this._pending);return fetch(t,s).then(e=>e.text()).then(t=>{this.define(e,t);return e}).catch(t=>{this.define(e,this._error)})}}const templateCache=new WeakMap;const styleRegistry=new StyleSheetRegistry;function templiteral(e=this,t=this){e.shadowRoot?e=e.shadowRoot:null;return(s,...i)=>{let n=templateCache.get(e);if(n&&s===n.strings){n.update(i)}else if(n){[...n.location.children].forEach(e=>n.location.removeChild(e));n=new Template(s,i,e,t);templateCache.set(e,n)}else{n=new Template(s,i,e,t);templateCache.set(e,n)}return n}}function fragment(e){return(t,...s)=>{Object.defineProperty(s,"$$key",{value:e,enumerable:false,configurable:false,writable:false});return[t,s]}}function condition(e){return(t,...s)=>{Object.defineProperty(s,"$$key",{value:e?"condition":"false",enumerable:false,configurable:false,writable:false});return e?[[t,s]]:[[[],s]]}}class Component extends HTMLElement{static get styles(){return styleRegistry}static get defineStyles(){return this.styles.define.bind(styleRegistry)}static get hasStyles(){return this.styles.registry.has.bind(styleRegistry.registry)}static get loadStyles(){return this.styles.load.bind(styleRegistry)}static get adoptStyles(){return this.styles.adopt.bind(styleRegistry)}static get boundAttributes(){return[]}static get boundProps(){return[]}static get observedAttributes(){return[...this.boundAttributes]}static get booleanAttributes(){return[]}static get renderer(){return"render"}setState(e={}){Object.entries(e).forEach(([e,t])=>{if(this.constructor.booleanAttributes.includes(e)){t=t===""?true:!!t}if(this.constructor.boundProps.includes(e)){this[e]=t}this.state[e]=t});this[this.constructor.renderer]()}constructor(e){super();if(e){this.attachShadow(e)}const t={};const s=this;const i=new Set;Object.defineProperty(this,"state",{get(){return t},set(e){Object.entries(e).forEach(([e,s])=>{t[e]=s})}});this.constructor.boundAttributes.map((e,t,s)=>{Object.defineProperty(this,e,{get(){if(this.constructor.booleanAttributes.includes(e)){return this.hasAttribute(e)}return this.getAttribute(e)},set(t){if(this.constructor.booleanAttributes.includes(e)){if(t||t===""){this.setAttribute(e,true)}else{this.removeAttribute(e)}}else{if(t){this.setAttribute(e,t)}else{this.removeAttribute(e)}}if(this.constructor.boundProps.includes(name)){this[name]=t}if(this.constructor.renderer&&typeof this[this.constructor.renderer]==="function"&&this.isConnected&&i.size===s.length){this[this.constructor.renderer]()}i.add(e)}})});Object.defineProperty(this,"templiteral",{get(){const e=s.shadowRoot?s.shadowRoot:s;return templiteral(e,s)},configurable:false,enumerable:false});Object.defineProperty(this,"html",{get(){return(...e)=>Reflect.apply(s.templiteral,s,e)},configurable:false,enumerable:false});Object.defineProperty(this,"fragment",{value:fragment,configurable:false,enumerable:false,writable:false});Object.defineProperty(this,"if",{value:condition,configurable:false,enumerable:false,writable:false})}attributeChangedCallback(e,t,s){if(this.constructor.booleanAttributes.includes(e)&&t!==s){s=s===""?true:s;this.setState({[e]:!!s});if(this.constructor.boundProps.includes(e)){this[e]=!!s}}else if(t!==s){this.setState({[e]:s});if(this.constructor.boundProps.includes(e)){this[e]=s}}this.emit("ComponentRender",{component:this,time:Date.now()})}get $$renderListener(){return this[this.constructor.renderer]}connectedCallback(){if(this.constructor.renderer&&typeof this[this.constructor.renderer]==="function"){this[this.constructor.renderer]();if(!this.$$listening){this.addEventListener("ComponentRender",this.$$renderListener)}}if(this.constructor.hasStyles(this.tagName.toLowerCase())){this.constructor.adoptStyles(this.shadowRoot?this.shadowRoot:this,this.tagName.toLowerCase())}this.$$listening=true;this.onInit()}disconnectedCallback(){templateCache.delete(this);if(this.constructor.renderer&&typeof this[this.constructor.renderer]==="function"){this.removeEventListener("ComponentRender",this.$$renderListener);this.$$listening=false}this[rendererSymbol]&&this[rendererSymbol][removeSymbol]();this.onDestroy()}onInit(){}onDestroy(){}emit(e,t){this.dispatchEvent(new CustomEvent(e,{bubbles:true,composed:true,detail:t}))}}const debounce=(e,t,s)=>{let i;return function n(...r){const o=this;const a=()=>{i=null;!s&&Reflect.apply(e,o,r)};const l=s&&!i;clearTimeout(i);i=setTimeout(a,t);l&&Reflect.apply(e,o,r)}};export{templiteral,fragment,condition,Component,debounce};