var templit=function(t){"use strict";const e=/---!{.*?(}!---)/gi;const s=/^\(.*\)$/gi;const n=/^\[.*\]$/;const i=/^this\./;const a=/---!\{/gi;const o=/\}!---/gi;class c{constructor(t,s){this.node=t;this.compiler=s;this.base=t.nodeValue||"";this.indicies=this.base.match(e).map(t=>+t.replace(a,"").replace(o,""));this.indicies.forEach(t=>this.compiler.partIndicies.set(t,this))}set value(t){const s=this.base.replace(e,t);this.value!==s?this.node.nodeValue=s:null}get value(){return this.node.nodeValue}setValue(t=[]){this.node.nodeValue=this.base.replace(/---!{*.}!---/g,e=>t[+e.replace(a,"").replace(o,"")])}update(t){this.node.nodeValue=this.base.replace(/---!{*.}!---/g,e=>{const s=t[+e.replace(a,"").replace(o,"")];return s===null?"":s})}}class l{constructor(t,s,n,i,c){this.node=t;this.boundAttrs=s;this.boundEvents=n;this.context=i;this.compiler=c;this.boundAttrs.forEach(t=>{t.base=t.value;const s=t.base.match(e)||[];this.indicies=s.map(t=>+t.replace(a,"").replace(o,""));this.indicies.forEach(t=>this.compiler.partIndicies.set(t,this))});this.addListeners()}addListeners(){this.boundEvents.forEach((t,e)=>{const s=t.split(/;/);const n=s.filter(t=>t.match(i));const a=n.join("; ");if(t.match(i)){const t=new Function(a).bind(this.context);this.node.addEventListener(e,t);this.node._boundEvents=t}if(n.length<s.length){console.warn("Inline functions not allowed inside of event bindings. Unsafe functions have been removed from node",this.node)}})}updateProperty(t,e){const s=t.name.replace(/\[|\]/g,"");this.node[s]=e;if(e&&e!=="false"){this.node.setAttribute(s,e)}else{this.node.removeAttribute(s)}}update(t){this.boundAttrs.forEach(e=>{const s=e.base.match(/---!{*.}!---/g)||[];const i=s.map(t=>+t.replace("---!{","").replace("}!---",""));let a=e.base;if(i.length===1){a=a.replace(`---!{${i[0]}}!---`,t[i[0]])}else if(i.length>1){for(let e=0;e<i.length;e+=1){const s=t[i[e]]||"";a=a.replace(`---!{${i[e]}}!---`,s)}}e.value=a;if(e.name.match(n)){if(i.length===1){a=t[i[0]]}this.updateProperty(e,a)}})}}class h{constructor(t,e,s,n){this.strings=t;this.values=e;this.oldValues=e.map((t,e)=>`---!{${e}}!---`);this.context=n;this.location=s;this.parts=[];this.partIndicies=new Map;this.eventHandlers=[];this._init()}_setParts(){for(let t=0;t<this.parts.length;t+=1){const e=this.parts[t];if(e instanceof c){e.setValue(this.values,this.oldValues[t])}else if(e instanceof l){e.update(this.values,this.oldValues)}}}_init(){const t=this.strings.map((t,e)=>`${t?t:""}${this.values[e]!==undefined?"---!{"+e+"}!---":""}`).join("");const e=document.createElement("template");e.innerHTML=t;const s=document.importNode(e.content,true);const n=document.createTreeWalker(s,133,null,false);this._walk(n,this.parts,true);this._setParts(s)}_walk(t,i,a){while(t.nextNode()){const{currentNode:o}=t;if(!o.__templiteralCompiler){switch(o.nodeType){case 1:{const{attributes:t}=o;if(t.length){const c=new Map;const h=new Map;for(let i=0;i<t.length;i+=1){const l=t[i];if(l.value.match(e)||l.name.match(n)){c.set(l.name,l)}if(a&&l.name.match(s)){const t=l.name.substring(1,l.name.length-1);h.set(t,l.value);this.eventHandlers.push({eventName:t,currentNode:o})}}if(c.size>=1||h.size>=1){const t=new l(o,c,h,this.context,this);i.push(t)}}break}case 3:{if(o.textContent&&o.textContent.match(e)){const t=new c(o,this);i.push(t)}break}}}else{this.templiteralParts.add(o)}}}update(t){this.oldValues=this.values;this.values=t;for(let e=0;e<t.length;e+=1){if(t[e]!==this.oldValues[e]){this.partIndicies.get(e).update(t)}}}}class r extends h{constructor(t,e,s,n){super(t,e,s,n)}_setParts(t){super._setParts();this.location.appendChild(t)}}const d=new WeakMap;function u(t=this,e=this){t.shadowRoot?t=t.shadowRoot:null;return(s,...n)=>{let i=d.get(t);if(i){i.update(n)}else{i=new r(s,n,t,e);d.set(t,i)}return i}}t.templiteral=u;return t}({});